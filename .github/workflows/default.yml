name: Test, Report Coverage and Release

on: [push, pull_request, workflow_dispatch]

jobs:
  run-tests:
    permissions:
      contents: read

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get specific changed files
        id: source-changed
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **.dart
            **/*.dart
            assets
            pubspec.yaml
            build.yaml
            analysis_options.yaml

      - name: Check if testing is required
        id: run-tests
        env:
          run_tests: ${{ steps.source-changed.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[ci release]') || contains(github.event.head_commit.message, '[ci test]') }}
        run: |
          echo "run-tests=$run_tests" >> $GITHUB_OUTPUT

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        if: ${{ steps.run-tests.outputs.run-tests == 'true' }}
        with:
          cache: true
          cache-key: "flutter-:channel:-:version:"
          channel: "stable"

      - name: Get Cached dependencies
        uses: actions/cache@v3
        if: ${{ steps.run-tests.outputs.run-tests == 'true' }}
        id: flutter_cache
        with:
          path: ${{ env.PUB_CACHE }}
          key: flutter-dependencies-v1-${{hashFiles('pubspec.yaml', 'pubspec.lock')}}
          restore-keys: |
            flutter-dependencies-v1-

      - name: Populate the Flutter tool's cache of binary artifacts
        if: ${{ steps.run-tests.outputs.run-tests == 'true' && steps.flutter_cache.outputs.cache-hit != 'true' }}
        run: |
          flutter config --no-analytics
          flutter precache

      - name: Get Cached .dart_tool
        uses: actions/cache@v3
        if: ${{ steps.run-tests.outputs.run-tests == 'true' }}
        id: dart_tool_cache
        with:
          path: .dart_tool
          key: dart-tool-v1-${{hashFiles('pubspec.yaml', 'build.yaml')}}
          restore-keys: |
            dart-tool-v1-

      - name: Install dependencies
        if: ${{ steps.run-tests.outputs.run-tests == 'true' }}
        run: flutter pub get

      - name: Run new builder
        if: ${{ steps.run-tests.outputs.run-tests == 'true' && steps.dart_tool_cache.outputs.cache-hit != 'true' }}
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run cached builder
        if: ${{ steps.run-tests.outputs.run-tests == 'true' && steps.dart_tool_cache.outputs.cache-hit == 'true' }}
        run: dart run build_runner build

      - name: Run Tests
        if: ${{ steps.run-tests.outputs.run-tests == 'true' }}
        run: flutter test --coverage --machine > test-results.json --dart-define CI=true

      - name: Upload test-results.json to artifacts
        uses: actions/upload-artifact@v3
        if: ${{ failure() || success() }}
        with:
          name: test-results
          path: test-results.json

  release:
    permissions:
      contents: write

    needs: run-tests
    runs-on: ubuntu-latest
    if: github.actor == github.repository_owner && (github.event_name == 'workflow_dispatch' || github.event_name != 'pull_request' && contains(github.event.head_commit.message, '[ci release]'))

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: "flutter-:channel:-:version:"
          channel: "stable"

      - name: Get Cached dependencies
        uses: actions/cache@v3
        id: flutter_cache
        with:
          path: ${{ env.PUB_CACHE }}
          key: flutter-dependencies-v1-${{hashFiles('pubspec.yaml', 'pubspec.lock')}}
          restore-keys: |
            flutter-dependencies-v1-

      - name: Populate the Flutter tool's cache of binary artifacts
        if: ${{ steps.flutter_cache.outputs.cache-hit != 'true' }}
        run: |
          flutter config --no-analytics
          flutter precache

      - name: Get Cached .dart_tool
        uses: actions/cache@v3
        id: dart_tool_cache
        with:
          path: .dart_tool
          key: dart-tool-v1-${{hashFiles('pubspec.yaml', 'build.yaml')}}
          restore-keys: |
            dart-tool-v1-

      - name: Install dependencies
        run: flutter pub get

      - name: Run new builder
        if: ${{ steps.dart_tool_cache.outputs.cache-hit != 'true' }}
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run cached builder
        if: ${{ steps.dart_tool_cache.outputs.cache-hit == 'true' }}
        run: dart run build_runner build

      - name: Build apk
        run: flutter build apk

      - name: Get version from pubspec.yaml
        id: version
        run: |
          version=$(grep 'version:' pubspec.yaml | awk '{print $2}' | awk -F "+" '{print $1}')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Add version to APK filename
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-release-v${{ steps.version.outputs.version }}.apk

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/flutter-apk/app-release-v${{ steps.version.outputs.version }}.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.version.outputs.version }}
          generateReleaseNotes: true
